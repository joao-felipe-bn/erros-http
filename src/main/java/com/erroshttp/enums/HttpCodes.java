package com.erroshttp.enums;

public enum HttpCodes {

    //Information responses
    CONTINUE("100","CONTINUE"),
    SWITCHING_PROTOCOL("101","SWITCHING PROTOCOL"),
    PROCESSING("102","PROCESSING"),
    EARLY_HINTS("103","EARLY HINTS"),

    //Successful responses
    OK("200","OK"),
    CREATED("201", "CREATED"),
    ACCEPTED("201","ACCEPTED"),
    NON_AUTHORITATIVE_INFORMATION("203","NON-AUTHORITATIVE INFORMATION"),
    NO_CONTENT("204", "NO CONTENT"),
    RESET_CONTENT("205" ,"RESET CONTENT"),
    PARTIAL_CONTENT("206","PARTIAL CONTENT"),
    MULTI_STATUS_WEBDAV("207","MULTI-STATUS (WEBDAV)"),
    ALREADY_REPORTED_WEBDAV("208","ALREADY REPORTED (WEBDAV)"),
    IM_USED_HTTP_DELTA_ENCODING("226","IM USED (HTTP DELTA ENCODING)"),

    //Redirection messages
    MULTIPLE_CHOICE("300","MULTIPLE CHOICE"),
    MOVED_PERMANENTLY("301","MOVED PERMANENTLY"),
    FOUND("302","FOUND"),
    SEE_OTHER("303", "SEE OTHER"),
    NOT_MODIFIED("304", "NOT MODIFIED"),
    USE_PROXY("305", "USE PROXY"),
    UNUSED("306", "UNUSED"),
    TEMPORARY_REDIRECT("307", "TEMPORARY REDIRECT"),
    PERMANENT_REDIRECT("308", "PERMANENT REDIRECT"),

    //Client error responses
    BAD_REQUEST("400", "BAD REQUEST"),
    UNAUTHORIZED("401", "UNAUTHORIZED"),
    PAYMENT_REQUIRED("402", "PAYMENT REQUIRED"),
    FORBIDDEN("403", "FORBIDDEN"),
    NOT_FOUND("404", "NOT FOUND"),
    METHOD_NOT_ALLOWED("405", "METHOD NOT ALLOWED"),
    NOT_ACCEPTABLE("406", "NOT ACCEPTABLE"),
    PROXY_AUTHENTICATION_REQUIRED("407", "PROXY AUTHENTICATION REQUIRED"),
    REQUEST_TIMEOUT("408", "REQUEST TIMEOUT"),
    CONFLICT("409", "CONFLICT"),
    GONE("410", "GONE"),
    LENGTH_REQUIRED("411", "LENGTH REQUIRED"),
    PRECONDITION_FAILED("412", "PRECONDITION FAILED"),
    PAYLOAD_TOO_LARGE("413", "PAYLOAD TOO LARGE"),
    URI_TOO_LONG("414", "URI TOO LONG"),
    UNSUPPORTED_MEDIA_TYPE("415", "UNSUPPORTED MEDIA TYPE"),
    RANGE_NOT_SATISFIABLE("416", "RANGE NOT SATISFIABLE"),
    EXPECTATION_FAILED("417", "EXPECTATION FAILED"),
    IM_A_TEAPOT("418", "I'M A TEAPOT "),
    MISDIRECTED_REQUEST("421", "MISDIRECTED REQUEST"),
    UNPROCESSABLE_ENTITY_WEBDAV("422", "UNPROCESSABLE ENTITY WEBDAV"),
    LOCKED_WEBDAV("423", "LOCKED (WEBDAV)"),
    FAILED_DEPENDENCY_WEBDAV("424", "FAILED DEPENDENCY (WEBDAV)"),
    TOO_EARLY("425", "TOO EARLY"),
    UPGRADE_REQUIRED("426", "UPGRADE REQUIRED"),
    PRECONDITION_REQUIRED("428", "PRECONDITION REQUIRED"),
    TOO_MANY_REQUESTS("429", "TOO MANY REQUESTS"),
    UNAVAILABLE_FOR_LEGAL_REASONS("451", "UNAVAILABLE FOR LEGAL REASONS"),

    //Server error responses
    INTERNAL_SERVER_ERROR("500", "INTERNAL SERVER ERROR"),
    NOT_IMPLEMENTED("501", "NOT IMPLEMENTED"),
    BAD_GATEWAY("502", "BAD GATEWAY"),
    SERVICE_UNAVAILABLE("503", "SERVICE UNAVAILABLE"),
    GATEWAY_TIMEOUT("504", "GATEWAY TIMEOUT"),
    HTTP_VERSION_NOT_SUPPORTED("505", "HTTP VERSION NOT SUPPORTED"),
    VARIANT_ALSO_NEGOTIATES("506", "VARIANT ALSO NEGOTIATES"),
    INSUFFICIENT_STORAGE_WEBDAV("507", "INSUFFICIENT STORAGE (WEBDAV)"),
    LOOP_DETECTED_WEBDAV("508", "LOOP DETECTED (WEBDAV)"),
    NOT_EXTENDED("510", "NOT EXTENDED"),
    NETWORK_AUTHENTICATION_REQUIRED("511", "NETWORK AUTHENTICATION REQUIRED");

    HttpCodes(String httpCode, String httpName){
        this.httpCode = httpCode;
        this.httpName = httpName;
    }

    private String httpCode;
    private String httpName;

    public String getHttpCode() {
        return httpCode;
    }
    public String getHttpName() { return httpName; }

    public static HttpCodes findHttpByCode(String code){
        for (HttpCodes value : HttpCodes.values()){
            if(value.getHttpCode().equals(code))
                return value;
        }
        return null;
    }
}
